# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    name: Build and Install
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Clean build artifacts
      run: |
        rm -rf *.egg-info
        rm -rf build/
        rm -rf dist/
        find . -type d -name __pycache__ -exec rm -rf {} + || true
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"
    - name: Verify installation
      run: |
        python -c "from kvstore import KVStore, KVServer, KVClient; print('âœ“ Package installed successfully')"

  lint:
    name: Lint with flake8
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install flake8
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    - name: Lint with flake8 - Syntax Errors
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=.venv,*.egg-info,build,dist
    - name: Lint with flake8 - Full Check
      run: |
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=.venv,*.egg-info,build,dist

  test:
    name: Test with pytest
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Clean build artifacts
      run: |
        rm -rf *.egg-info
        rm -rf build/
        rm -rf dist/
        find . -type d -name __pycache__ -exec rm -rf {} + || true
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"
    - name: Test with pytest
      run: |
        pytest tests/ -v --tb=short

